<?php
/**
 * EmploymentHistoryItem
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Credit Profile
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: OpenAPI3.2.0.52
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * EmploymentHistoryItem Class Doc Comment
 *
 * @category Class
 * @description Individual Employment History Record
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class EmploymentHistoryItem implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'EmploymentHistoryItem';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'origin_report_id' => 'string',
        'employer_identification_number' => 'string',
        'employer_name' => 'string',
        'original_hire_date' => 'string',
        'most_recent_hire_date' => 'string',
        'employer_address' => '\OpenAPI\Client\Model\EmployerAddress',
        'employment_status' => '\OpenAPI\Client\Model\EmploymentStatus',
        'work_status' => '\OpenAPI\Client\Model\WorkStatus',
        'payment_history' => '\OpenAPI\Client\Model\PaymentHistoryItem[]',
        'total_annual_remuneration' => '\OpenAPI\Client\Model\TotalAnnualRemunerationItem[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'origin_report_id' => null,
        'employer_identification_number' => null,
        'employer_name' => null,
        'original_hire_date' => null,
        'most_recent_hire_date' => null,
        'employer_address' => null,
        'employment_status' => null,
        'work_status' => null,
        'payment_history' => null,
        'total_annual_remuneration' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'origin_report_id' => 'originReportId',
        'employer_identification_number' => 'employerIdentificationNumber',
        'employer_name' => 'employerName',
        'original_hire_date' => 'originalHireDate',
        'most_recent_hire_date' => 'mostRecentHireDate',
        'employer_address' => 'employerAddress',
        'employment_status' => 'employmentStatus',
        'work_status' => 'workStatus',
        'payment_history' => 'paymentHistory',
        'total_annual_remuneration' => 'totalAnnualRemuneration'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'origin_report_id' => 'setOriginReportId',
        'employer_identification_number' => 'setEmployerIdentificationNumber',
        'employer_name' => 'setEmployerName',
        'original_hire_date' => 'setOriginalHireDate',
        'most_recent_hire_date' => 'setMostRecentHireDate',
        'employer_address' => 'setEmployerAddress',
        'employment_status' => 'setEmploymentStatus',
        'work_status' => 'setWorkStatus',
        'payment_history' => 'setPaymentHistory',
        'total_annual_remuneration' => 'setTotalAnnualRemuneration'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'origin_report_id' => 'getOriginReportId',
        'employer_identification_number' => 'getEmployerIdentificationNumber',
        'employer_name' => 'getEmployerName',
        'original_hire_date' => 'getOriginalHireDate',
        'most_recent_hire_date' => 'getMostRecentHireDate',
        'employer_address' => 'getEmployerAddress',
        'employment_status' => 'getEmploymentStatus',
        'work_status' => 'getWorkStatus',
        'payment_history' => 'getPaymentHistory',
        'total_annual_remuneration' => 'getTotalAnnualRemuneration'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['origin_report_id'] = isset($data['origin_report_id']) ? $data['origin_report_id'] : null;
        $this->container['employer_identification_number'] = isset($data['employer_identification_number']) ? $data['employer_identification_number'] : null;
        $this->container['employer_name'] = isset($data['employer_name']) ? $data['employer_name'] : null;
        $this->container['original_hire_date'] = isset($data['original_hire_date']) ? $data['original_hire_date'] : null;
        $this->container['most_recent_hire_date'] = isset($data['most_recent_hire_date']) ? $data['most_recent_hire_date'] : null;
        $this->container['employer_address'] = isset($data['employer_address']) ? $data['employer_address'] : null;
        $this->container['employment_status'] = isset($data['employment_status']) ? $data['employment_status'] : null;
        $this->container['work_status'] = isset($data['work_status']) ? $data['work_status'] : null;
        $this->container['payment_history'] = isset($data['payment_history']) ? $data['payment_history'] : null;
        $this->container['total_annual_remuneration'] = isset($data['total_annual_remuneration']) ? $data['total_annual_remuneration'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets origin_report_id
     *
     * @return string|null
     */
    public function getOriginReportId()
    {
        return $this->container['origin_report_id'];
    }

    /**
     * Sets origin_report_id
     *
     * @param string|null $origin_report_id origin_report_id
     *
     * @return $this
     */
    public function setOriginReportId($origin_report_id)
    {
        $this->container['origin_report_id'] = $origin_report_id;

        return $this;
    }

    /**
     * Gets employer_identification_number
     *
     * @return string|null
     */
    public function getEmployerIdentificationNumber()
    {
        return $this->container['employer_identification_number'];
    }

    /**
     * Sets employer_identification_number
     *
     * @param string|null $employer_identification_number employer_identification_number
     *
     * @return $this
     */
    public function setEmployerIdentificationNumber($employer_identification_number)
    {
        $this->container['employer_identification_number'] = $employer_identification_number;

        return $this;
    }

    /**
     * Gets employer_name
     *
     * @return string|null
     */
    public function getEmployerName()
    {
        return $this->container['employer_name'];
    }

    /**
     * Sets employer_name
     *
     * @param string|null $employer_name employer_name
     *
     * @return $this
     */
    public function setEmployerName($employer_name)
    {
        $this->container['employer_name'] = $employer_name;

        return $this;
    }

    /**
     * Gets original_hire_date
     *
     * @return string|null
     */
    public function getOriginalHireDate()
    {
        return $this->container['original_hire_date'];
    }

    /**
     * Sets original_hire_date
     *
     * @param string|null $original_hire_date original_hire_date
     *
     * @return $this
     */
    public function setOriginalHireDate($original_hire_date)
    {
        $this->container['original_hire_date'] = $original_hire_date;

        return $this;
    }

    /**
     * Gets most_recent_hire_date
     *
     * @return string|null
     */
    public function getMostRecentHireDate()
    {
        return $this->container['most_recent_hire_date'];
    }

    /**
     * Sets most_recent_hire_date
     *
     * @param string|null $most_recent_hire_date most_recent_hire_date
     *
     * @return $this
     */
    public function setMostRecentHireDate($most_recent_hire_date)
    {
        $this->container['most_recent_hire_date'] = $most_recent_hire_date;

        return $this;
    }

    /**
     * Gets employer_address
     *
     * @return \OpenAPI\Client\Model\EmployerAddress|null
     */
    public function getEmployerAddress()
    {
        return $this->container['employer_address'];
    }

    /**
     * Sets employer_address
     *
     * @param \OpenAPI\Client\Model\EmployerAddress|null $employer_address employer_address
     *
     * @return $this
     */
    public function setEmployerAddress($employer_address)
    {
        $this->container['employer_address'] = $employer_address;

        return $this;
    }

    /**
     * Gets employment_status
     *
     * @return \OpenAPI\Client\Model\EmploymentStatus|null
     */
    public function getEmploymentStatus()
    {
        return $this->container['employment_status'];
    }

    /**
     * Sets employment_status
     *
     * @param \OpenAPI\Client\Model\EmploymentStatus|null $employment_status employment_status
     *
     * @return $this
     */
    public function setEmploymentStatus($employment_status)
    {
        $this->container['employment_status'] = $employment_status;

        return $this;
    }

    /**
     * Gets work_status
     *
     * @return \OpenAPI\Client\Model\WorkStatus|null
     */
    public function getWorkStatus()
    {
        return $this->container['work_status'];
    }

    /**
     * Sets work_status
     *
     * @param \OpenAPI\Client\Model\WorkStatus|null $work_status work_status
     *
     * @return $this
     */
    public function setWorkStatus($work_status)
    {
        $this->container['work_status'] = $work_status;

        return $this;
    }

    /**
     * Gets payment_history
     *
     * @return \OpenAPI\Client\Model\PaymentHistoryItem[]|null
     */
    public function getPaymentHistory()
    {
        return $this->container['payment_history'];
    }

    /**
     * Sets payment_history
     *
     * @param \OpenAPI\Client\Model\PaymentHistoryItem[]|null $payment_history payment_history
     *
     * @return $this
     */
    public function setPaymentHistory($payment_history)
    {
        $this->container['payment_history'] = $payment_history;

        return $this;
    }

    /**
     * Gets total_annual_remuneration
     *
     * @return \OpenAPI\Client\Model\TotalAnnualRemunerationItem[]|null
     */
    public function getTotalAnnualRemuneration()
    {
        return $this->container['total_annual_remuneration'];
    }

    /**
     * Sets total_annual_remuneration
     *
     * @param \OpenAPI\Client\Model\TotalAnnualRemunerationItem[]|null $total_annual_remuneration total_annual_remuneration
     *
     * @return $this
     */
    public function setTotalAnnualRemuneration($total_annual_remuneration)
    {
        $this->container['total_annual_remuneration'] = $total_annual_remuneration;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


