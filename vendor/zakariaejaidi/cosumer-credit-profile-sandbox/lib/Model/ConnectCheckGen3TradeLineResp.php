<?php
/**
 * ConnectCheckGen3TradeLineResp
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Credit Profile
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: OpenAPI3.2.0.52
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ConnectCheckGen3TradeLineResp Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ConnectCheckGen3TradeLineResp implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'connectCheckGen3TradeLineResp';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'sub_code' => 'string',
        'status_code' => 'string',
        'account_type_code' => 'string',
        'special_comment' => 'string',
        'balance_amount' => 'string',
        'balance_date' => 'string',
        'account_number_len' => 'string',
        'account_number' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'sub_code' => null,
        'status_code' => null,
        'account_type_code' => null,
        'special_comment' => null,
        'balance_amount' => null,
        'balance_date' => null,
        'account_number_len' => null,
        'account_number' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'sub_code' => 'subCode',
        'status_code' => 'statusCode',
        'account_type_code' => 'accountTypeCode',
        'special_comment' => 'specialComment',
        'balance_amount' => 'balanceAmount',
        'balance_date' => 'balanceDate',
        'account_number_len' => 'accountNumberLen',
        'account_number' => 'accountNumber'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'sub_code' => 'setSubCode',
        'status_code' => 'setStatusCode',
        'account_type_code' => 'setAccountTypeCode',
        'special_comment' => 'setSpecialComment',
        'balance_amount' => 'setBalanceAmount',
        'balance_date' => 'setBalanceDate',
        'account_number_len' => 'setAccountNumberLen',
        'account_number' => 'setAccountNumber'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'sub_code' => 'getSubCode',
        'status_code' => 'getStatusCode',
        'account_type_code' => 'getAccountTypeCode',
        'special_comment' => 'getSpecialComment',
        'balance_amount' => 'getBalanceAmount',
        'balance_date' => 'getBalanceDate',
        'account_number_len' => 'getAccountNumberLen',
        'account_number' => 'getAccountNumber'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['sub_code'] = isset($data['sub_code']) ? $data['sub_code'] : null;
        $this->container['status_code'] = isset($data['status_code']) ? $data['status_code'] : null;
        $this->container['account_type_code'] = isset($data['account_type_code']) ? $data['account_type_code'] : null;
        $this->container['special_comment'] = isset($data['special_comment']) ? $data['special_comment'] : null;
        $this->container['balance_amount'] = isset($data['balance_amount']) ? $data['balance_amount'] : null;
        $this->container['balance_date'] = isset($data['balance_date']) ? $data['balance_date'] : null;
        $this->container['account_number_len'] = isset($data['account_number_len']) ? $data['account_number_len'] : null;
        $this->container['account_number'] = isset($data['account_number']) ? $data['account_number'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets sub_code
     *
     * @return string|null
     */
    public function getSubCode()
    {
        return $this->container['sub_code'];
    }

    /**
     * Sets sub_code
     *
     * @param string|null $sub_code Trade Subscriber Code.
     *
     * @return $this
     */
    public function setSubCode($sub_code)
    {
        $this->container['sub_code'] = $sub_code;

        return $this;
    }

    /**
     * Gets status_code
     *
     * @return string|null
     */
    public function getStatusCode()
    {
        return $this->container['status_code'];
    }

    /**
     * Sets status_code
     *
     * @param string|null $status_code Trade Status Code.
     *
     * @return $this
     */
    public function setStatusCode($status_code)
    {
        $this->container['status_code'] = $status_code;

        return $this;
    }

    /**
     * Gets account_type_code
     *
     * @return string|null
     */
    public function getAccountTypeCode()
    {
        return $this->container['account_type_code'];
    }

    /**
     * Sets account_type_code
     *
     * @param string|null $account_type_code Trade Type.
     *
     * @return $this
     */
    public function setAccountTypeCode($account_type_code)
    {
        $this->container['account_type_code'] = $account_type_code;

        return $this;
    }

    /**
     * Gets special_comment
     *
     * @return string|null
     */
    public function getSpecialComment()
    {
        return $this->container['special_comment'];
    }

    /**
     * Sets special_comment
     *
     * @param string|null $special_comment Trade Special Comment.
     *
     * @return $this
     */
    public function setSpecialComment($special_comment)
    {
        $this->container['special_comment'] = $special_comment;

        return $this;
    }

    /**
     * Gets balance_amount
     *
     * @return string|null
     */
    public function getBalanceAmount()
    {
        return $this->container['balance_amount'];
    }

    /**
     * Sets balance_amount
     *
     * @param string|null $balance_amount Balance Amount.
     *
     * @return $this
     */
    public function setBalanceAmount($balance_amount)
    {
        $this->container['balance_amount'] = $balance_amount;

        return $this;
    }

    /**
     * Gets balance_date
     *
     * @return string|null
     */
    public function getBalanceDate()
    {
        return $this->container['balance_date'];
    }

    /**
     * Sets balance_date
     *
     * @param string|null $balance_date Balance Date.
     *
     * @return $this
     */
    public function setBalanceDate($balance_date)
    {
        $this->container['balance_date'] = $balance_date;

        return $this;
    }

    /**
     * Gets account_number_len
     *
     * @return string|null
     */
    public function getAccountNumberLen()
    {
        return $this->container['account_number_len'];
    }

    /**
     * Sets account_number_len
     *
     * @param string|null $account_number_len Trade Account Number Length.
     *
     * @return $this
     */
    public function setAccountNumberLen($account_number_len)
    {
        $this->container['account_number_len'] = $account_number_len;

        return $this;
    }

    /**
     * Gets account_number
     *
     * @return string|null
     */
    public function getAccountNumber()
    {
        return $this->container['account_number'];
    }

    /**
     * Sets account_number
     *
     * @param string|null $account_number Trade Account Number Length.
     *
     * @return $this
     */
    public function setAccountNumber($account_number)
    {
        $this->container['account_number'] = $account_number;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


