<?php
/**
 * ConnectAddons
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Credit Profile
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: OpenAPI3.2.0.52
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * ConnectAddons Class Doc Comment
 *
 * @category Class
 * @description Add on products that can be requested. Each add on is billable. These are optional parameters and can be omitted if not needed.
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class ConnectAddons implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'ConnectAddons';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'direct_check' => 'string',
        'demographics' => 'string',
        'clarity_early_risk_score' => 'string',
        'clarity_data' => '\OpenAPI\Client\Model\ClarityAccountData',
        'risk_models' => '\OpenAPI\Client\Model\RiskModel',
        'summaries' => '\OpenAPI\Client\Model\AddonsSummaries',
        'fraud_shield' => 'string',
        'mla' => 'string',
        'ofacmsg' => 'string',
        'consumer_ident_check' => '\OpenAPI\Client\Model\ConsumerIdentifierCheckOptionsConnect',
        'payment_history84' => 'string',
        'credit_score_notice' => 'string',
        'credit_score_notice_data' => '\OpenAPI\Client\Model\CreditScoreNoticeDataDaas',
        'output_type' => 'string',
        'tty_data' => '\OpenAPI\Client\Model\TTYData'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'direct_check' => null,
        'demographics' => null,
        'clarity_early_risk_score' => null,
        'clarity_data' => null,
        'risk_models' => null,
        'summaries' => null,
        'fraud_shield' => null,
        'mla' => null,
        'ofacmsg' => null,
        'consumer_ident_check' => null,
        'payment_history84' => null,
        'credit_score_notice' => null,
        'credit_score_notice_data' => null,
        'output_type' => null,
        'tty_data' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'direct_check' => 'directCheck',
        'demographics' => 'demographics',
        'clarity_early_risk_score' => 'clarityEarlyRiskScore',
        'clarity_data' => 'clarityData',
        'risk_models' => 'riskModels',
        'summaries' => 'summaries',
        'fraud_shield' => 'fraudShield',
        'mla' => 'mla',
        'ofacmsg' => 'ofacmsg',
        'consumer_ident_check' => 'consumerIdentCheck',
        'payment_history84' => 'paymentHistory84',
        'credit_score_notice' => 'creditScoreNotice',
        'credit_score_notice_data' => 'creditScoreNoticeData',
        'output_type' => 'outputType',
        'tty_data' => 'ttyData'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'direct_check' => 'setDirectCheck',
        'demographics' => 'setDemographics',
        'clarity_early_risk_score' => 'setClarityEarlyRiskScore',
        'clarity_data' => 'setClarityData',
        'risk_models' => 'setRiskModels',
        'summaries' => 'setSummaries',
        'fraud_shield' => 'setFraudShield',
        'mla' => 'setMla',
        'ofacmsg' => 'setOfacmsg',
        'consumer_ident_check' => 'setConsumerIdentCheck',
        'payment_history84' => 'setPaymentHistory84',
        'credit_score_notice' => 'setCreditScoreNotice',
        'credit_score_notice_data' => 'setCreditScoreNoticeData',
        'output_type' => 'setOutputType',
        'tty_data' => 'setTtyData'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'direct_check' => 'getDirectCheck',
        'demographics' => 'getDemographics',
        'clarity_early_risk_score' => 'getClarityEarlyRiskScore',
        'clarity_data' => 'getClarityData',
        'risk_models' => 'getRiskModels',
        'summaries' => 'getSummaries',
        'fraud_shield' => 'getFraudShield',
        'mla' => 'getMla',
        'ofacmsg' => 'getOfacmsg',
        'consumer_ident_check' => 'getConsumerIdentCheck',
        'payment_history84' => 'getPaymentHistory84',
        'credit_score_notice' => 'getCreditScoreNotice',
        'credit_score_notice_data' => 'getCreditScoreNoticeData',
        'output_type' => 'getOutputType',
        'tty_data' => 'getTtyData'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['direct_check'] = isset($data['direct_check']) ? $data['direct_check'] : null;
        $this->container['demographics'] = isset($data['demographics']) ? $data['demographics'] : null;
        $this->container['clarity_early_risk_score'] = isset($data['clarity_early_risk_score']) ? $data['clarity_early_risk_score'] : null;
        $this->container['clarity_data'] = isset($data['clarity_data']) ? $data['clarity_data'] : null;
        $this->container['risk_models'] = isset($data['risk_models']) ? $data['risk_models'] : null;
        $this->container['summaries'] = isset($data['summaries']) ? $data['summaries'] : null;
        $this->container['fraud_shield'] = isset($data['fraud_shield']) ? $data['fraud_shield'] : null;
        $this->container['mla'] = isset($data['mla']) ? $data['mla'] : null;
        $this->container['ofacmsg'] = isset($data['ofacmsg']) ? $data['ofacmsg'] : null;
        $this->container['consumer_ident_check'] = isset($data['consumer_ident_check']) ? $data['consumer_ident_check'] : null;
        $this->container['payment_history84'] = isset($data['payment_history84']) ? $data['payment_history84'] : null;
        $this->container['credit_score_notice'] = isset($data['credit_score_notice']) ? $data['credit_score_notice'] : null;
        $this->container['credit_score_notice_data'] = isset($data['credit_score_notice_data']) ? $data['credit_score_notice_data'] : null;
        $this->container['output_type'] = isset($data['output_type']) ? $data['output_type'] : null;
        $this->container['tty_data'] = isset($data['tty_data']) ? $data['tty_data'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets direct_check
     *
     * @return string|null
     */
    public function getDirectCheck()
    {
        return $this->container['direct_check'];
    }

    /**
     * Sets direct_check
     *
     * @param string|null $direct_check Send back subscriber information on the credit profile. When set to Y indicates that subscriber and court names, addresses, and phone numbers who have reported data on the consumer's profile will be sent back on the response.
     *
     * @return $this
     */
    public function setDirectCheck($direct_check)
    {
        $this->container['direct_check'] = $direct_check;

        return $this;
    }

    /**
     * Gets demographics
     *
     * @return string|null
     */
    public function getDemographics()
    {
        return $this->container['demographics'];
    }

    /**
     * Sets demographics
     *
     * @param string|null $demographics Indicates the type of demographic data that should be returned back.
     *
     * @return $this
     */
    public function setDemographics($demographics)
    {
        $this->container['demographics'] = $demographics;

        return $this;
    }

    /**
     * Gets clarity_early_risk_score
     *
     * @return string|null
     */
    public function getClarityEarlyRiskScore()
    {
        return $this->container['clarity_early_risk_score'];
    }

    /**
     * Sets clarity_early_risk_score
     *
     * @param string|null $clarity_early_risk_score Y.  Returns Clarity's 90 day Clear Early Risk Score (CERS) which predict the risk of a consumer going 90 days past due in first 12 months of a traditional bureau trade. This can be omitted if Clarity Early Risk Score is not needed.
     *
     * @return $this
     */
    public function setClarityEarlyRiskScore($clarity_early_risk_score)
    {
        $this->container['clarity_early_risk_score'] = $clarity_early_risk_score;

        return $this;
    }

    /**
     * Gets clarity_data
     *
     * @return \OpenAPI\Client\Model\ClarityAccountData|null
     */
    public function getClarityData()
    {
        return $this->container['clarity_data'];
    }

    /**
     * Sets clarity_data
     *
     * @param \OpenAPI\Client\Model\ClarityAccountData|null $clarity_data clarity_data
     *
     * @return $this
     */
    public function setClarityData($clarity_data)
    {
        $this->container['clarity_data'] = $clarity_data;

        return $this;
    }

    /**
     * Gets risk_models
     *
     * @return \OpenAPI\Client\Model\RiskModel|null
     */
    public function getRiskModels()
    {
        return $this->container['risk_models'];
    }

    /**
     * Sets risk_models
     *
     * @param \OpenAPI\Client\Model\RiskModel|null $risk_models risk_models
     *
     * @return $this
     */
    public function setRiskModels($risk_models)
    {
        $this->container['risk_models'] = $risk_models;

        return $this;
    }

    /**
     * Gets summaries
     *
     * @return \OpenAPI\Client\Model\AddonsSummaries|null
     */
    public function getSummaries()
    {
        return $this->container['summaries'];
    }

    /**
     * Sets summaries
     *
     * @param \OpenAPI\Client\Model\AddonsSummaries|null $summaries summaries
     *
     * @return $this
     */
    public function setSummaries($summaries)
    {
        $this->container['summaries'] = $summaries;

        return $this;
    }

    /**
     * Gets fraud_shield
     *
     * @return string|null
     */
    public function getFraudShield()
    {
        return $this->container['fraud_shield'];
    }

    /**
     * Sets fraud_shield
     *
     * @param string|null $fraud_shield Y - Fraud Shield Product Option will be output
     *
     * @return $this
     */
    public function setFraudShield($fraud_shield)
    {
        $this->container['fraud_shield'] = $fraud_shield;

        return $this;
    }

    /**
     * Gets mla
     *
     * @return string|null
     */
    public function getMla()
    {
        return $this->container['mla'];
    }

    /**
     * Sets mla
     *
     * @param string|null $mla Y - Trigger a screening process of taking the consumer data from an inquiry to match against the Dept of Defense MLA lists. Message codes 1203-1207 could be returned. Permissible Purpose with valid YOB required for getting this option.
     *
     * @return $this
     */
    public function setMla($mla)
    {
        $this->container['mla'] = $mla;

        return $this;
    }

    /**
     * Gets ofacmsg
     *
     * @return string|null
     */
    public function getOfacmsg()
    {
        return $this->container['ofacmsg'];
    }

    /**
     * Sets ofacmsg
     *
     * @param string|null $ofacmsg Y- Trigger a screening process of taking the consumer data from an inquiry to match against the OFAC (Office of Foreign Asset Control) and PLC (Palestinian Legislative Council) lists. A message 1202 NAME DOES NOT MATCH OFAC/PLC LIST will be printed on credit profile if the consumer is not found on either OFAC or PLC list. A message 1200 NAME MATCHES OFAC/PLC LIST will be printed on credit profile if the consumer is found on either OFAC or PLC list.
     *
     * @return $this
     */
    public function setOfacmsg($ofacmsg)
    {
        $this->container['ofacmsg'] = $ofacmsg;

        return $this;
    }

    /**
     * Gets consumer_ident_check
     *
     * @return \OpenAPI\Client\Model\ConsumerIdentifierCheckOptionsConnect|null
     */
    public function getConsumerIdentCheck()
    {
        return $this->container['consumer_ident_check'];
    }

    /**
     * Sets consumer_ident_check
     *
     * @param \OpenAPI\Client\Model\ConsumerIdentifierCheckOptionsConnect|null $consumer_ident_check consumer_ident_check
     *
     * @return $this
     */
    public function setConsumerIdentCheck($consumer_ident_check)
    {
        $this->container['consumer_ident_check'] = $consumer_ident_check;

        return $this;
    }

    /**
     * Gets payment_history84
     *
     * @return string|null
     */
    public function getPaymentHistory84()
    {
        return $this->container['payment_history84'];
    }

    /**
     * Sets payment_history84
     *
     * @param string|null $payment_history84 Y.  84 month payment history is requested instead of the 25 month history. This can be omitted if 84 month history is not needed.
     *
     * @return $this
     */
    public function setPaymentHistory84($payment_history84)
    {
        $this->container['payment_history84'] = $payment_history84;

        return $this;
    }

    /**
     * Gets credit_score_notice
     *
     * @return string|null
     */
    public function getCreditScoreNotice()
    {
        return $this->container['credit_score_notice'];
    }

    /**
     * Sets credit_score_notice
     *
     * @param string|null $credit_score_notice Y.  It makes 'creditScoreNoticeData' a mandatory element.
     *
     * @return $this
     */
    public function setCreditScoreNotice($credit_score_notice)
    {
        $this->container['credit_score_notice'] = $credit_score_notice;

        return $this;
    }

    /**
     * Gets credit_score_notice_data
     *
     * @return \OpenAPI\Client\Model\CreditScoreNoticeDataDaas|null
     */
    public function getCreditScoreNoticeData()
    {
        return $this->container['credit_score_notice_data'];
    }

    /**
     * Sets credit_score_notice_data
     *
     * @param \OpenAPI\Client\Model\CreditScoreNoticeDataDaas|null $credit_score_notice_data credit_score_notice_data
     *
     * @return $this
     */
    public function setCreditScoreNoticeData($credit_score_notice_data)
    {
        $this->container['credit_score_notice_data'] = $credit_score_notice_data;

        return $this;
    }

    /**
     * Gets output_type
     *
     * @return string|null
     */
    public function getOutputType()
    {
        return $this->container['output_type'];
    }

    /**
     * Sets output_type
     *
     * @param string|null $output_type ENUM JSON,ARF,TTYSUMMARY,TTYDETAIL,TTYFULL If JSON is type, API returns JSON response If ARF is type, API creates a JSON wrapper with a single data tag that contains the ARF output. If TTY is type, API returns the output in TTY format and wraps that into a single JSON data tag.
     *
     * @return $this
     */
    public function setOutputType($output_type)
    {
        $this->container['output_type'] = $output_type;

        return $this;
    }

    /**
     * Gets tty_data
     *
     * @return \OpenAPI\Client\Model\TTYData|null
     */
    public function getTtyData()
    {
        return $this->container['tty_data'];
    }

    /**
     * Sets tty_data
     *
     * @param \OpenAPI\Client\Model\TTYData|null $tty_data tty_data
     *
     * @return $this
     */
    public function setTtyData($tty_data)
    {
        $this->container['tty_data'] = $tty_data;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


