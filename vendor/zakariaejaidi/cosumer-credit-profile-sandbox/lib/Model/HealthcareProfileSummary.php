<?php
/**
 * HealthcareProfileSummary
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Credit Profile
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: OpenAPI3.2.0.52
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * HealthcareProfileSummary Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class HealthcareProfileSummary implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'healthcareProfileSummary';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'open_revolving_count' => 'string',
        'open_revolving_balance' => 'string',
        'open_revolving_credit_limits' => 'string',
        'open_installment_count' => 'string',
        'open_installment_balance_amount' => 'string',
        'open_installment_monthly_payment_amount' => 'string',
        'unpaid_collections_count' => 'string',
        'unpaid_collections_amount' => 'string',
        'bankruptcies_filed_count' => 'string',
        'bankruptcies_filed_amount' => 'string',
        'bankruptcies_discharged_count' => 'string',
        'bankruptcies_discharged_amount' => 'string',
        'bankruptcies_dismissed_count' => 'string',
        'bankruptcies_dismissed_amount' => 'string',
        'liens_count' => 'string',
        'liens_amount' => 'string',
        'liens_released_count' => 'string',
        'liens_released_amount' => 'string',
        'judgments' => 'string',
        'judgments_amount' => 'string',
        'judgments_satisfied_count' => 'string',
        'judgments_satisfied_amount' => 'string',
        'judgments_vacated_count' => 'string',
        'judgments_vacated_amount' => 'string',
        'inquiries_count_last30_days' => 'string',
        'inquiries_count_last_two_years' => 'string',
        'inquiries_amount' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'open_revolving_count' => null,
        'open_revolving_balance' => null,
        'open_revolving_credit_limits' => null,
        'open_installment_count' => null,
        'open_installment_balance_amount' => null,
        'open_installment_monthly_payment_amount' => null,
        'unpaid_collections_count' => null,
        'unpaid_collections_amount' => null,
        'bankruptcies_filed_count' => null,
        'bankruptcies_filed_amount' => null,
        'bankruptcies_discharged_count' => null,
        'bankruptcies_discharged_amount' => null,
        'bankruptcies_dismissed_count' => null,
        'bankruptcies_dismissed_amount' => null,
        'liens_count' => null,
        'liens_amount' => null,
        'liens_released_count' => null,
        'liens_released_amount' => null,
        'judgments' => null,
        'judgments_amount' => null,
        'judgments_satisfied_count' => null,
        'judgments_satisfied_amount' => null,
        'judgments_vacated_count' => null,
        'judgments_vacated_amount' => null,
        'inquiries_count_last30_days' => null,
        'inquiries_count_last_two_years' => null,
        'inquiries_amount' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'open_revolving_count' => 'openRevolvingCount',
        'open_revolving_balance' => 'openRevolvingBalance',
        'open_revolving_credit_limits' => 'openRevolvingCreditLimits',
        'open_installment_count' => 'openInstallmentCount',
        'open_installment_balance_amount' => 'openInstallmentBalanceAmount',
        'open_installment_monthly_payment_amount' => 'openInstallmentMonthlyPaymentAmount',
        'unpaid_collections_count' => 'unpaidCollectionsCount',
        'unpaid_collections_amount' => 'unpaidCollectionsAmount',
        'bankruptcies_filed_count' => 'bankruptciesFiledCount',
        'bankruptcies_filed_amount' => 'bankruptciesFiledAmount',
        'bankruptcies_discharged_count' => 'bankruptciesDischargedCount',
        'bankruptcies_discharged_amount' => 'bankruptciesDischargedAmount',
        'bankruptcies_dismissed_count' => 'bankruptciesDismissedCount',
        'bankruptcies_dismissed_amount' => 'bankruptciesDismissedAmount',
        'liens_count' => 'liensCount',
        'liens_amount' => 'liensAmount',
        'liens_released_count' => 'liensReleasedCount',
        'liens_released_amount' => 'liensReleasedAmount',
        'judgments' => 'judgments',
        'judgments_amount' => 'judgmentsAmount',
        'judgments_satisfied_count' => 'judgmentsSatisfiedCount',
        'judgments_satisfied_amount' => 'judgmentsSatisfiedAmount',
        'judgments_vacated_count' => 'judgmentsVacatedCount',
        'judgments_vacated_amount' => 'judgmentsVacatedAmount',
        'inquiries_count_last30_days' => 'inquiriesCountLast30Days',
        'inquiries_count_last_two_years' => 'inquiriesCountLastTwoYears',
        'inquiries_amount' => 'inquiriesAmount'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'open_revolving_count' => 'setOpenRevolvingCount',
        'open_revolving_balance' => 'setOpenRevolvingBalance',
        'open_revolving_credit_limits' => 'setOpenRevolvingCreditLimits',
        'open_installment_count' => 'setOpenInstallmentCount',
        'open_installment_balance_amount' => 'setOpenInstallmentBalanceAmount',
        'open_installment_monthly_payment_amount' => 'setOpenInstallmentMonthlyPaymentAmount',
        'unpaid_collections_count' => 'setUnpaidCollectionsCount',
        'unpaid_collections_amount' => 'setUnpaidCollectionsAmount',
        'bankruptcies_filed_count' => 'setBankruptciesFiledCount',
        'bankruptcies_filed_amount' => 'setBankruptciesFiledAmount',
        'bankruptcies_discharged_count' => 'setBankruptciesDischargedCount',
        'bankruptcies_discharged_amount' => 'setBankruptciesDischargedAmount',
        'bankruptcies_dismissed_count' => 'setBankruptciesDismissedCount',
        'bankruptcies_dismissed_amount' => 'setBankruptciesDismissedAmount',
        'liens_count' => 'setLiensCount',
        'liens_amount' => 'setLiensAmount',
        'liens_released_count' => 'setLiensReleasedCount',
        'liens_released_amount' => 'setLiensReleasedAmount',
        'judgments' => 'setJudgments',
        'judgments_amount' => 'setJudgmentsAmount',
        'judgments_satisfied_count' => 'setJudgmentsSatisfiedCount',
        'judgments_satisfied_amount' => 'setJudgmentsSatisfiedAmount',
        'judgments_vacated_count' => 'setJudgmentsVacatedCount',
        'judgments_vacated_amount' => 'setJudgmentsVacatedAmount',
        'inquiries_count_last30_days' => 'setInquiriesCountLast30Days',
        'inquiries_count_last_two_years' => 'setInquiriesCountLastTwoYears',
        'inquiries_amount' => 'setInquiriesAmount'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'open_revolving_count' => 'getOpenRevolvingCount',
        'open_revolving_balance' => 'getOpenRevolvingBalance',
        'open_revolving_credit_limits' => 'getOpenRevolvingCreditLimits',
        'open_installment_count' => 'getOpenInstallmentCount',
        'open_installment_balance_amount' => 'getOpenInstallmentBalanceAmount',
        'open_installment_monthly_payment_amount' => 'getOpenInstallmentMonthlyPaymentAmount',
        'unpaid_collections_count' => 'getUnpaidCollectionsCount',
        'unpaid_collections_amount' => 'getUnpaidCollectionsAmount',
        'bankruptcies_filed_count' => 'getBankruptciesFiledCount',
        'bankruptcies_filed_amount' => 'getBankruptciesFiledAmount',
        'bankruptcies_discharged_count' => 'getBankruptciesDischargedCount',
        'bankruptcies_discharged_amount' => 'getBankruptciesDischargedAmount',
        'bankruptcies_dismissed_count' => 'getBankruptciesDismissedCount',
        'bankruptcies_dismissed_amount' => 'getBankruptciesDismissedAmount',
        'liens_count' => 'getLiensCount',
        'liens_amount' => 'getLiensAmount',
        'liens_released_count' => 'getLiensReleasedCount',
        'liens_released_amount' => 'getLiensReleasedAmount',
        'judgments' => 'getJudgments',
        'judgments_amount' => 'getJudgmentsAmount',
        'judgments_satisfied_count' => 'getJudgmentsSatisfiedCount',
        'judgments_satisfied_amount' => 'getJudgmentsSatisfiedAmount',
        'judgments_vacated_count' => 'getJudgmentsVacatedCount',
        'judgments_vacated_amount' => 'getJudgmentsVacatedAmount',
        'inquiries_count_last30_days' => 'getInquiriesCountLast30Days',
        'inquiries_count_last_two_years' => 'getInquiriesCountLastTwoYears',
        'inquiries_amount' => 'getInquiriesAmount'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['open_revolving_count'] = isset($data['open_revolving_count']) ? $data['open_revolving_count'] : null;
        $this->container['open_revolving_balance'] = isset($data['open_revolving_balance']) ? $data['open_revolving_balance'] : null;
        $this->container['open_revolving_credit_limits'] = isset($data['open_revolving_credit_limits']) ? $data['open_revolving_credit_limits'] : null;
        $this->container['open_installment_count'] = isset($data['open_installment_count']) ? $data['open_installment_count'] : null;
        $this->container['open_installment_balance_amount'] = isset($data['open_installment_balance_amount']) ? $data['open_installment_balance_amount'] : null;
        $this->container['open_installment_monthly_payment_amount'] = isset($data['open_installment_monthly_payment_amount']) ? $data['open_installment_monthly_payment_amount'] : null;
        $this->container['unpaid_collections_count'] = isset($data['unpaid_collections_count']) ? $data['unpaid_collections_count'] : null;
        $this->container['unpaid_collections_amount'] = isset($data['unpaid_collections_amount']) ? $data['unpaid_collections_amount'] : null;
        $this->container['bankruptcies_filed_count'] = isset($data['bankruptcies_filed_count']) ? $data['bankruptcies_filed_count'] : null;
        $this->container['bankruptcies_filed_amount'] = isset($data['bankruptcies_filed_amount']) ? $data['bankruptcies_filed_amount'] : null;
        $this->container['bankruptcies_discharged_count'] = isset($data['bankruptcies_discharged_count']) ? $data['bankruptcies_discharged_count'] : null;
        $this->container['bankruptcies_discharged_amount'] = isset($data['bankruptcies_discharged_amount']) ? $data['bankruptcies_discharged_amount'] : null;
        $this->container['bankruptcies_dismissed_count'] = isset($data['bankruptcies_dismissed_count']) ? $data['bankruptcies_dismissed_count'] : null;
        $this->container['bankruptcies_dismissed_amount'] = isset($data['bankruptcies_dismissed_amount']) ? $data['bankruptcies_dismissed_amount'] : null;
        $this->container['liens_count'] = isset($data['liens_count']) ? $data['liens_count'] : null;
        $this->container['liens_amount'] = isset($data['liens_amount']) ? $data['liens_amount'] : null;
        $this->container['liens_released_count'] = isset($data['liens_released_count']) ? $data['liens_released_count'] : null;
        $this->container['liens_released_amount'] = isset($data['liens_released_amount']) ? $data['liens_released_amount'] : null;
        $this->container['judgments'] = isset($data['judgments']) ? $data['judgments'] : null;
        $this->container['judgments_amount'] = isset($data['judgments_amount']) ? $data['judgments_amount'] : null;
        $this->container['judgments_satisfied_count'] = isset($data['judgments_satisfied_count']) ? $data['judgments_satisfied_count'] : null;
        $this->container['judgments_satisfied_amount'] = isset($data['judgments_satisfied_amount']) ? $data['judgments_satisfied_amount'] : null;
        $this->container['judgments_vacated_count'] = isset($data['judgments_vacated_count']) ? $data['judgments_vacated_count'] : null;
        $this->container['judgments_vacated_amount'] = isset($data['judgments_vacated_amount']) ? $data['judgments_vacated_amount'] : null;
        $this->container['inquiries_count_last30_days'] = isset($data['inquiries_count_last30_days']) ? $data['inquiries_count_last30_days'] : null;
        $this->container['inquiries_count_last_two_years'] = isset($data['inquiries_count_last_two_years']) ? $data['inquiries_count_last_two_years'] : null;
        $this->container['inquiries_amount'] = isset($data['inquiries_amount']) ? $data['inquiries_amount'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets open_revolving_count
     *
     * @return string|null
     */
    public function getOpenRevolvingCount()
    {
        return $this->container['open_revolving_count'];
    }

    /**
     * Sets open_revolving_count
     *
     * @param string|null $open_revolving_count Number of open revolving accounts on the profile
     *
     * @return $this
     */
    public function setOpenRevolvingCount($open_revolving_count)
    {
        $this->container['open_revolving_count'] = $open_revolving_count;

        return $this;
    }

    /**
     * Gets open_revolving_balance
     *
     * @return string|null
     */
    public function getOpenRevolvingBalance()
    {
        return $this->container['open_revolving_balance'];
    }

    /**
     * Sets open_revolving_balance
     *
     * @param string|null $open_revolving_balance Total dollar amount of open revolving tradelines. If not present on profile, this field is empty.
     *
     * @return $this
     */
    public function setOpenRevolvingBalance($open_revolving_balance)
    {
        $this->container['open_revolving_balance'] = $open_revolving_balance;

        return $this;
    }

    /**
     * Gets open_revolving_credit_limits
     *
     * @return string|null
     */
    public function getOpenRevolvingCreditLimits()
    {
        return $this->container['open_revolving_credit_limits'];
    }

    /**
     * Sets open_revolving_credit_limits
     *
     * @param string|null $open_revolving_credit_limits Total dollar amount of open revolving credit limits. If not present on profile, this field is empty.
     *
     * @return $this
     */
    public function setOpenRevolvingCreditLimits($open_revolving_credit_limits)
    {
        $this->container['open_revolving_credit_limits'] = $open_revolving_credit_limits;

        return $this;
    }

    /**
     * Gets open_installment_count
     *
     * @return string|null
     */
    public function getOpenInstallmentCount()
    {
        return $this->container['open_installment_count'];
    }

    /**
     * Sets open_installment_count
     *
     * @param string|null $open_installment_count Number of open installment accounts on the profile
     *
     * @return $this
     */
    public function setOpenInstallmentCount($open_installment_count)
    {
        $this->container['open_installment_count'] = $open_installment_count;

        return $this;
    }

    /**
     * Gets open_installment_balance_amount
     *
     * @return string|null
     */
    public function getOpenInstallmentBalanceAmount()
    {
        return $this->container['open_installment_balance_amount'];
    }

    /**
     * Sets open_installment_balance_amount
     *
     * @param string|null $open_installment_balance_amount Total balance amount of open installment loans. If not present on profile, this field is empty
     *
     * @return $this
     */
    public function setOpenInstallmentBalanceAmount($open_installment_balance_amount)
    {
        $this->container['open_installment_balance_amount'] = $open_installment_balance_amount;

        return $this;
    }

    /**
     * Gets open_installment_monthly_payment_amount
     *
     * @return string|null
     */
    public function getOpenInstallmentMonthlyPaymentAmount()
    {
        return $this->container['open_installment_monthly_payment_amount'];
    }

    /**
     * Sets open_installment_monthly_payment_amount
     *
     * @param string|null $open_installment_monthly_payment_amount Total open installment monthly payment amount. If not present on profile, this field is empty
     *
     * @return $this
     */
    public function setOpenInstallmentMonthlyPaymentAmount($open_installment_monthly_payment_amount)
    {
        $this->container['open_installment_monthly_payment_amount'] = $open_installment_monthly_payment_amount;

        return $this;
    }

    /**
     * Gets unpaid_collections_count
     *
     * @return string|null
     */
    public function getUnpaidCollectionsCount()
    {
        return $this->container['unpaid_collections_count'];
    }

    /**
     * Sets unpaid_collections_count
     *
     * @param string|null $unpaid_collections_count Number of unpaid collections account on the profile
     *
     * @return $this
     */
    public function setUnpaidCollectionsCount($unpaid_collections_count)
    {
        $this->container['unpaid_collections_count'] = $unpaid_collections_count;

        return $this;
    }

    /**
     * Gets unpaid_collections_amount
     *
     * @return string|null
     */
    public function getUnpaidCollectionsAmount()
    {
        return $this->container['unpaid_collections_amount'];
    }

    /**
     * Sets unpaid_collections_amount
     *
     * @param string|null $unpaid_collections_amount Total dollar amount of unpaid collections. If not present on profile, this field is empty
     *
     * @return $this
     */
    public function setUnpaidCollectionsAmount($unpaid_collections_amount)
    {
        $this->container['unpaid_collections_amount'] = $unpaid_collections_amount;

        return $this;
    }

    /**
     * Gets bankruptcies_filed_count
     *
     * @return string|null
     */
    public function getBankruptciesFiledCount()
    {
        return $this->container['bankruptcies_filed_count'];
    }

    /**
     * Sets bankruptcies_filed_count
     *
     * @param string|null $bankruptcies_filed_count Number of bankruptcies filed public records
     *
     * @return $this
     */
    public function setBankruptciesFiledCount($bankruptcies_filed_count)
    {
        $this->container['bankruptcies_filed_count'] = $bankruptcies_filed_count;

        return $this;
    }

    /**
     * Gets bankruptcies_filed_amount
     *
     * @return string|null
     */
    public function getBankruptciesFiledAmount()
    {
        return $this->container['bankruptcies_filed_amount'];
    }

    /**
     * Sets bankruptcies_filed_amount
     *
     * @param string|null $bankruptcies_filed_amount Total dollar liability amount of bankruptcies filed. If not present on profile then this field is empty
     *
     * @return $this
     */
    public function setBankruptciesFiledAmount($bankruptcies_filed_amount)
    {
        $this->container['bankruptcies_filed_amount'] = $bankruptcies_filed_amount;

        return $this;
    }

    /**
     * Gets bankruptcies_discharged_count
     *
     * @return string|null
     */
    public function getBankruptciesDischargedCount()
    {
        return $this->container['bankruptcies_discharged_count'];
    }

    /**
     * Sets bankruptcies_discharged_count
     *
     * @param string|null $bankruptcies_discharged_count Number of bankruptcies discharged public records
     *
     * @return $this
     */
    public function setBankruptciesDischargedCount($bankruptcies_discharged_count)
    {
        $this->container['bankruptcies_discharged_count'] = $bankruptcies_discharged_count;

        return $this;
    }

    /**
     * Gets bankruptcies_discharged_amount
     *
     * @return string|null
     */
    public function getBankruptciesDischargedAmount()
    {
        return $this->container['bankruptcies_discharged_amount'];
    }

    /**
     * Sets bankruptcies_discharged_amount
     *
     * @param string|null $bankruptcies_discharged_amount Total dollar liability amount of bankruptcies discharged. If not present on profile then this field is empty
     *
     * @return $this
     */
    public function setBankruptciesDischargedAmount($bankruptcies_discharged_amount)
    {
        $this->container['bankruptcies_discharged_amount'] = $bankruptcies_discharged_amount;

        return $this;
    }

    /**
     * Gets bankruptcies_dismissed_count
     *
     * @return string|null
     */
    public function getBankruptciesDismissedCount()
    {
        return $this->container['bankruptcies_dismissed_count'];
    }

    /**
     * Sets bankruptcies_dismissed_count
     *
     * @param string|null $bankruptcies_dismissed_count Number of bankruptcies dismissed public records
     *
     * @return $this
     */
    public function setBankruptciesDismissedCount($bankruptcies_dismissed_count)
    {
        $this->container['bankruptcies_dismissed_count'] = $bankruptcies_dismissed_count;

        return $this;
    }

    /**
     * Gets bankruptcies_dismissed_amount
     *
     * @return string|null
     */
    public function getBankruptciesDismissedAmount()
    {
        return $this->container['bankruptcies_dismissed_amount'];
    }

    /**
     * Sets bankruptcies_dismissed_amount
     *
     * @param string|null $bankruptcies_dismissed_amount Total dollar liability amount of bankruptcies dismissed. If not present on profile then this field is empty
     *
     * @return $this
     */
    public function setBankruptciesDismissedAmount($bankruptcies_dismissed_amount)
    {
        $this->container['bankruptcies_dismissed_amount'] = $bankruptcies_dismissed_amount;

        return $this;
    }

    /**
     * Gets liens_count
     *
     * @return string|null
     */
    public function getLiensCount()
    {
        return $this->container['liens_count'];
    }

    /**
     * Sets liens_count
     *
     * @param string|null $liens_count Number of liens
     *
     * @return $this
     */
    public function setLiensCount($liens_count)
    {
        $this->container['liens_count'] = $liens_count;

        return $this;
    }

    /**
     * Gets liens_amount
     *
     * @return string|null
     */
    public function getLiensAmount()
    {
        return $this->container['liens_amount'];
    }

    /**
     * Sets liens_amount
     *
     * @param string|null $liens_amount Total dollar amount of liens. If not present on profile then this field is empty
     *
     * @return $this
     */
    public function setLiensAmount($liens_amount)
    {
        $this->container['liens_amount'] = $liens_amount;

        return $this;
    }

    /**
     * Gets liens_released_count
     *
     * @return string|null
     */
    public function getLiensReleasedCount()
    {
        return $this->container['liens_released_count'];
    }

    /**
     * Sets liens_released_count
     *
     * @param string|null $liens_released_count Number of liens released
     *
     * @return $this
     */
    public function setLiensReleasedCount($liens_released_count)
    {
        $this->container['liens_released_count'] = $liens_released_count;

        return $this;
    }

    /**
     * Gets liens_released_amount
     *
     * @return string|null
     */
    public function getLiensReleasedAmount()
    {
        return $this->container['liens_released_amount'];
    }

    /**
     * Sets liens_released_amount
     *
     * @param string|null $liens_released_amount Total dollar amount of liens released. If not present on profile then this field is empty
     *
     * @return $this
     */
    public function setLiensReleasedAmount($liens_released_amount)
    {
        $this->container['liens_released_amount'] = $liens_released_amount;

        return $this;
    }

    /**
     * Gets judgments
     *
     * @return string|null
     */
    public function getJudgments()
    {
        return $this->container['judgments'];
    }

    /**
     * Sets judgments
     *
     * @param string|null $judgments Number of judgments
     *
     * @return $this
     */
    public function setJudgments($judgments)
    {
        $this->container['judgments'] = $judgments;

        return $this;
    }

    /**
     * Gets judgments_amount
     *
     * @return string|null
     */
    public function getJudgmentsAmount()
    {
        return $this->container['judgments_amount'];
    }

    /**
     * Sets judgments_amount
     *
     * @param string|null $judgments_amount Total dollar amount of judgments. If not present on profile then this field is empty
     *
     * @return $this
     */
    public function setJudgmentsAmount($judgments_amount)
    {
        $this->container['judgments_amount'] = $judgments_amount;

        return $this;
    }

    /**
     * Gets judgments_satisfied_count
     *
     * @return string|null
     */
    public function getJudgmentsSatisfiedCount()
    {
        return $this->container['judgments_satisfied_count'];
    }

    /**
     * Sets judgments_satisfied_count
     *
     * @param string|null $judgments_satisfied_count Number of judgments satisfied
     *
     * @return $this
     */
    public function setJudgmentsSatisfiedCount($judgments_satisfied_count)
    {
        $this->container['judgments_satisfied_count'] = $judgments_satisfied_count;

        return $this;
    }

    /**
     * Gets judgments_satisfied_amount
     *
     * @return string|null
     */
    public function getJudgmentsSatisfiedAmount()
    {
        return $this->container['judgments_satisfied_amount'];
    }

    /**
     * Sets judgments_satisfied_amount
     *
     * @param string|null $judgments_satisfied_amount Total dollar amount of judgments satisfied. If not present on profile then this field is empty
     *
     * @return $this
     */
    public function setJudgmentsSatisfiedAmount($judgments_satisfied_amount)
    {
        $this->container['judgments_satisfied_amount'] = $judgments_satisfied_amount;

        return $this;
    }

    /**
     * Gets judgments_vacated_count
     *
     * @return string|null
     */
    public function getJudgmentsVacatedCount()
    {
        return $this->container['judgments_vacated_count'];
    }

    /**
     * Sets judgments_vacated_count
     *
     * @param string|null $judgments_vacated_count Number of judgments vacated
     *
     * @return $this
     */
    public function setJudgmentsVacatedCount($judgments_vacated_count)
    {
        $this->container['judgments_vacated_count'] = $judgments_vacated_count;

        return $this;
    }

    /**
     * Gets judgments_vacated_amount
     *
     * @return string|null
     */
    public function getJudgmentsVacatedAmount()
    {
        return $this->container['judgments_vacated_amount'];
    }

    /**
     * Sets judgments_vacated_amount
     *
     * @param string|null $judgments_vacated_amount Total dollar amount of judgments vacated. If not present on profile then this field is empty
     *
     * @return $this
     */
    public function setJudgmentsVacatedAmount($judgments_vacated_amount)
    {
        $this->container['judgments_vacated_amount'] = $judgments_vacated_amount;

        return $this;
    }

    /**
     * Gets inquiries_count_last30_days
     *
     * @return string|null
     */
    public function getInquiriesCountLast30Days()
    {
        return $this->container['inquiries_count_last30_days'];
    }

    /**
     * Sets inquiries_count_last30_days
     *
     * @param string|null $inquiries_count_last30_days Number of inquiries in last 30 days
     *
     * @return $this
     */
    public function setInquiriesCountLast30Days($inquiries_count_last30_days)
    {
        $this->container['inquiries_count_last30_days'] = $inquiries_count_last30_days;

        return $this;
    }

    /**
     * Gets inquiries_count_last_two_years
     *
     * @return string|null
     */
    public function getInquiriesCountLastTwoYears()
    {
        return $this->container['inquiries_count_last_two_years'];
    }

    /**
     * Sets inquiries_count_last_two_years
     *
     * @param string|null $inquiries_count_last_two_years Number of inquiries in last two years
     *
     * @return $this
     */
    public function setInquiriesCountLastTwoYears($inquiries_count_last_two_years)
    {
        $this->container['inquiries_count_last_two_years'] = $inquiries_count_last_two_years;

        return $this;
    }

    /**
     * Gets inquiries_amount
     *
     * @return string|null
     */
    public function getInquiriesAmount()
    {
        return $this->container['inquiries_amount'];
    }

    /**
     * Sets inquiries_amount
     *
     * @param string|null $inquiries_amount Total dollar amount of inquiries in past two years. If not present on profile then this field is empty
     *
     * @return $this
     */
    public function setInquiriesAmount($inquiries_amount)
    {
        $this->container['inquiries_amount'] = $inquiries_amount;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


