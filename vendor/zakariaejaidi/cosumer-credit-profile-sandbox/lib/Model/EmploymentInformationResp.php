<?php
/**
 * EmploymentInformationResp
 *
 * PHP version 5
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Credit Profile
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: OpenAPI3.2.0.52
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 3.3.4
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * EmploymentInformationResp Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class EmploymentInformationResp implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'employmentInformationResp';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'address_extra_line' => 'string',
        'address_first_line' => 'string',
        'address_second_line' => 'string',
        'first_reported_date' => 'string',
        'last_updated_date' => 'string',
        'name' => 'string',
        'source' => 'string',
        'zip_code' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'address_extra_line' => null,
        'address_first_line' => null,
        'address_second_line' => null,
        'first_reported_date' => null,
        'last_updated_date' => null,
        'name' => null,
        'source' => null,
        'zip_code' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'address_extra_line' => 'addressExtraLine',
        'address_first_line' => 'addressFirstLine',
        'address_second_line' => 'addressSecondLine',
        'first_reported_date' => 'firstReportedDate',
        'last_updated_date' => 'lastUpdatedDate',
        'name' => 'name',
        'source' => 'source',
        'zip_code' => 'zipCode'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'address_extra_line' => 'setAddressExtraLine',
        'address_first_line' => 'setAddressFirstLine',
        'address_second_line' => 'setAddressSecondLine',
        'first_reported_date' => 'setFirstReportedDate',
        'last_updated_date' => 'setLastUpdatedDate',
        'name' => 'setName',
        'source' => 'setSource',
        'zip_code' => 'setZipCode'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'address_extra_line' => 'getAddressExtraLine',
        'address_first_line' => 'getAddressFirstLine',
        'address_second_line' => 'getAddressSecondLine',
        'first_reported_date' => 'getFirstReportedDate',
        'last_updated_date' => 'getLastUpdatedDate',
        'name' => 'getName',
        'source' => 'getSource',
        'zip_code' => 'getZipCode'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['address_extra_line'] = isset($data['address_extra_line']) ? $data['address_extra_line'] : null;
        $this->container['address_first_line'] = isset($data['address_first_line']) ? $data['address_first_line'] : null;
        $this->container['address_second_line'] = isset($data['address_second_line']) ? $data['address_second_line'] : null;
        $this->container['first_reported_date'] = isset($data['first_reported_date']) ? $data['first_reported_date'] : null;
        $this->container['last_updated_date'] = isset($data['last_updated_date']) ? $data['last_updated_date'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['source'] = isset($data['source']) ? $data['source'] : null;
        $this->container['zip_code'] = isset($data['zip_code']) ? $data['zip_code'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets address_extra_line
     *
     * @return string|null
     */
    public function getAddressExtraLine()
    {
        return $this->container['address_extra_line'];
    }

    /**
     * Sets address_extra_line
     *
     * @param string|null $address_extra_line Extra line of employer's address
     *
     * @return $this
     */
    public function setAddressExtraLine($address_extra_line)
    {
        $this->container['address_extra_line'] = $address_extra_line;

        return $this;
    }

    /**
     * Gets address_first_line
     *
     * @return string|null
     */
    public function getAddressFirstLine()
    {
        return $this->container['address_first_line'];
    }

    /**
     * Sets address_first_line
     *
     * @param string|null $address_first_line 1st line of employer's address
     *
     * @return $this
     */
    public function setAddressFirstLine($address_first_line)
    {
        $this->container['address_first_line'] = $address_first_line;

        return $this;
    }

    /**
     * Gets address_second_line
     *
     * @return string|null
     */
    public function getAddressSecondLine()
    {
        return $this->container['address_second_line'];
    }

    /**
     * Sets address_second_line
     *
     * @param string|null $address_second_line 2nd line of employer's address
     *
     * @return $this
     */
    public function setAddressSecondLine($address_second_line)
    {
        $this->container['address_second_line'] = $address_second_line;

        return $this;
    }

    /**
     * Gets first_reported_date
     *
     * @return string|null
     */
    public function getFirstReportedDate()
    {
        return $this->container['first_reported_date'];
    }

    /**
     * Sets first_reported_date
     *
     * @param string|null $first_reported_date Date employment first reported. Format = MMDDCCYY
     *
     * @return $this
     */
    public function setFirstReportedDate($first_reported_date)
    {
        $this->container['first_reported_date'] = $first_reported_date;

        return $this;
    }

    /**
     * Gets last_updated_date
     *
     * @return string|null
     */
    public function getLastUpdatedDate()
    {
        return $this->container['last_updated_date'];
    }

    /**
     * Sets last_updated_date
     *
     * @param string|null $last_updated_date Date employment last updated. Format = MMDDCCYY.
     *
     * @return $this
     */
    public function setLastUpdatedDate($last_updated_date)
    {
        $this->container['last_updated_date'] = $last_updated_date;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name Employer's Name.
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets source
     *
     * @return string|null
     */
    public function getSource()
    {
        return $this->container['source'];
    }

    /**
     * Sets source
     *
     * @param string|null $source Source of Employment
     *
     * @return $this
     */
    public function setSource($source)
    {
        $this->container['source'] = $source;

        return $this;
    }

    /**
     * Gets zip_code
     *
     * @return string|null
     */
    public function getZipCode()
    {
        return $this->container['zip_code'];
    }

    /**
     * Sets zip_code
     *
     * @param string|null $zip_code ZIP code of employer.
     *
     * @return $this
     */
    public function setZipCode($zip_code)
    {
        $this->container['zip_code'] = $zip_code;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }
}


